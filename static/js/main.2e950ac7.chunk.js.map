{"version":3,"sources":["components/Header.js","components/Generations.js","components/Cell.js","constants/constants.js","components/Grid.js","components/Controls.js","components/Game.js","containers/GameWrapper.js","actions/action-creators.js","constants/action-types.js","components/Rules.js","components/Footer.js","components/App.js","reducers/cellData.utils.js","reducers/cellData.js","reducers/generation.js","reducers/index.js","store.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Generations","_ref","generation","className","Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","index","concat","alive","style","height","width","onClick","Component","Grid","makeGrid","cells","cellData","map","c","i","Cell_Cell","key","library","add","faPause","faPlay","faRandom","faStepForward","faTimes","Controls","clear","pause","play","random","step","state","selected","cancelAnimationFrame","requestID","setState","nextGen","requestAnimationFrame","react_fontawesome_index_es","icon","Game","components_Generations","Grid_Grid","Controls_Controls","GameWrapper","connect","dispatch","type","ac","Rules","href","rel","target","Footer","App","components_Header","components_Rules","containers_GameWrapper","components_Footer","clearCells","arguments","length","undefined","Array","fill","neighborsAlive","idx","arr","_coordinatesCalc","Error","Math","floor","coordinatesCalc","_coordinatesCalc2","slicedToArray","x","y","count","forEach","direction","xC","yC","apply","toConsumableArray","calculateNext","action","u","clone","combineReducers","store","createStore","reducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","es","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2e950ac7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <header>\n    <h1>John Conway's Game of Life</h1>\n    <h3>a zero player automaton</h3>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Generations = ({ generation }) => (\n  <div className=\"generations\">\n    <h1>\n      Generation: <span className=\"num\">{generation}</span>\n    </h1>\n  </div>\n);\n\nexport default Generations;\n\nGenerations.propTypes = {\n  generation: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as c from '../constants/constants';\n\nexport default class Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle() {\n    this.props.toggle(this.props.index);\n  }\n  render() {\n    return (\n      <div\n        className={`cell ${this.props.alive ? 'alive' : 'dead'}`}\n        style={{\n          height: c.cellSide,\n          width: c.cellSide,\n        }}\n        onClick={this.toggle}\n      />\n    );\n  }\n}\n\nCell.propTypes = {\n  alive: PropTypes.bool.isRequired,\n  index: PropTypes.number.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n","// Constants\nexport const cellSide = 20; // Cell height and width in pixels\nexport const gridHeight = 20;\nexport const gridWidth = 30;\nexport const probability = 0.8; // Default probability a cell is alive on randomize\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Cell from './Cell';\nimport * as c from '../constants/constants';\n\nexport default class Grid extends Component {\n  componentDidMount() {\n    this.props.makeGrid();\n  }\n  render() {\n    const cells = this.props.cellData.map((c, i) => (\n      <Cell key={i} alive={c} toggle={this.props.toggle} index={i} />\n    ));\n    return (\n      <div\n        className=\"grid\"\n        style={{\n          width: c.cellSide * c.gridWidth,\n        }}\n      >\n        {cells}\n      </div>\n    );\n  }\n}\n\nGrid.propTypes = {\n  cellData: PropTypes.arrayOf(PropTypes.bool).isRequired,\n  makeGrid: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Font Awesome\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPause,\n  faPlay,\n  faRandom,\n  faStepForward,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faPause, faPlay, faRandom, faStepForward, faTimes);\n\n// Controls\nexport default class Controls extends Component {\n  constructor(props) {\n    super(props);\n    this.clear = this.clear.bind(this);\n    this.pause = this.pause.bind(this);\n    this.play = this.play.bind(this);\n    this.random = this.random.bind(this);\n    this.step = this.step.bind(this);\n\n    this.state = { selected: null };\n  }\n  clear() {\n    if (this.state.selected !== 'clear') {\n      cancelAnimationFrame(this.requestID);\n      this.props.clear();\n      this.setState({ selected: 'clear' });\n    }\n  }\n  pause() {\n    if (\n      this.state.selected !== 'clear' &&\n      this.state.selected !== 'pause' &&\n      this.state.selected !== 'random'\n    ) {\n      cancelAnimationFrame(this.requestID);\n      this.setState({ selected: 'pause' });\n    }\n  }\n  play() {\n    this.props.nextGen();\n    this.requestID = requestAnimationFrame(this.play);\n    this.setState({ selected: 'play' });\n  }\n  random() {\n    cancelAnimationFrame(this.requestID);\n    this.props.makeGrid();\n    this.setState({ selected: 'random' });\n  }\n  step() {\n    if (this.state.selected !== 'play') {\n      this.props.nextGen();\n    }\n  }\n  componentDidMount() {\n    this.play();\n  }\n  render() {\n    const { selected } = this.state;\n    return (\n      <div className=\"controls\">\n        {/* STEP */}\n        <button className={`step ${selected === 'play' ? 'disabled' : ''}`} onClick={this.step}>\n          <FontAwesomeIcon icon=\"step-forward\" />\n          &nbsp;Step\n        </button>\n\n        {/* PLAY */}\n        <button\n          className={`play ${selected === 'play' ? 'selected disabled' : ''}`}\n          onClick={selected !== 'play' ? this.play : null}\n        >\n          <FontAwesomeIcon icon=\"play\" />\n          &nbsp;Play\n        </button>\n\n        {/* PAUSE */}\n        <button\n          className={`pause ${selected === 'pause' ? 'selected disabled' : ''} ${\n            selected !== 'play' ? 'disabled' : ''\n          }`}\n          onClick={this.pause}\n        >\n          <FontAwesomeIcon icon=\"pause\" />\n          &nbsp;Pause\n        </button>\n\n        {/* CLEAR */}\n        <button\n          className={`clear ${selected === 'clear' ? 'selected disabled' : ''}`}\n          onClick={this.clear}\n        >\n          <FontAwesomeIcon icon=\"times\" />\n          &nbsp;Clear\n        </button>\n\n        {/* RANDOM */}\n        <button\n          className={`random ${selected === 'random' ? 'selected' : ''}`}\n          onClick={this.random}\n        >\n          <FontAwesomeIcon icon=\"random\" />\n          &nbsp;Random\n        </button>\n      </div>\n    );\n  }\n}\n\nControls.propTypes = {\n  clear: PropTypes.func.isRequired,\n  makeGrid: PropTypes.func.isRequired,\n  nextGen: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Generations from './Generations';\nimport Grid from './Grid';\nimport Controls from './Controls';\n\nconst Game = props => (\n  <span>\n    <div className=\"game\">\n      <Generations generation={props.generation} />\n      <Grid cellData={props.cellData} makeGrid={props.makeGrid} toggle={props.toggle} />\n      <Controls clear={props.clear} makeGrid={props.makeGrid} nextGen={props.nextGen} />\n    </div>\n    <p className=\"backup\">\n      For an optimal experience, please view this application on a wider screen.\n    </p>\n  </span>\n);\n\nexport default Game;\n\nGame.propTypes = {\n  cellData: PropTypes.arrayOf(PropTypes.bool).isRequired,\n  clear: PropTypes.func.isRequired,\n  generation: PropTypes.number.isRequired,\n  makeGrid: PropTypes.func.isRequired,\n  nextGen: PropTypes.func.isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport * as ac from '../actions/action-creators';\n\nimport Game from '../components/Game';\n\n// Containers\nconst mapStateToProps = state => ({\n  generation: state.generation,\n  cellData: state.cellData,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clear: () => dispatch(ac.clear()),\n  makeGrid: () => dispatch(ac.makeGrid()),\n  nextGen: () => dispatch(ac.nextGen()),\n  toggle: index => dispatch(ac.toggle(index)),\n});\n\nconst GameWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Game);\n\nexport default GameWrapper;\n","import * as a from '../constants/action-types';\n\n// Action Creators\nexport const clear = () => ({ type: a.CLEAR });\nexport const makeGrid = () => ({ type: a.MAKE_GRID });\nexport const nextGen = () => ({ type: a.NEXT_GEN });\nexport const toggle = index => ({ index, type: a.TOGGLE });\n","// Action Types\nexport const CLEAR = 'CLEAR';\nexport const MAKE_GRID = 'MAKE_GRID';\nexport const NEXT_GEN = 'NEXT_GEN';\nexport const TOGGLE = 'TOGGLE';\n","import React from 'react';\n\nconst Rules = () => (\n  <div className=\"rules\">\n    <h2>Rules</h2>\n    <ol>\n      <li>\n        Any live cell with fewer than two live neighbours dies, as if caused by underpopulation.\n      </li>\n      <li>Any live cell with two or three live neighbours lives on to the next generation.</li>\n      <li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\n      <li>\n        Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\n      </li>\n    </ol>\n    <p>\n      Learn more{' '}\n      <a\n        href=\"https://en.wikipedia.org/wiki/Conway's_Game_of_Life\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        here\n      </a>\n      .\n    </p>\n  </div>\n);\n\nexport default Rules;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer>\n    <p>\n      <a\n        href=\"https://github.com/CharmedSatyr/game_of_life\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Source code\n      </a>{' '}\n      available under the{' '}\n      <a\n        href=\"https://github.com/CharmedSatyr/game_of_life/blob/master/LICENSE\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        GNU Public License v3.0\n      </a>\n    </p>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './Header';\nimport GameWrapper from '../containers/GameWrapper';\nimport Rules from './Rules';\nimport Footer from './Footer';\n\nconst App = () => (\n  <div className=\"app\">\n    <Header />\n    <main>\n      <Rules />\n      <GameWrapper />\n    </main>\n    <Footer />\n  </div>\n);\n\nexport default App;\n","import * as c from '../constants/constants';\n\n/*** MAKE GRID ***/\n// Create a default array of `false` Booleans\nexport const clearCells = (height = c.gridHeight, width = c.gridWidth) =>\n  Array(height * width).fill(false);\n\n// Replace some of the `false` Booleans with `true`\n// A 'living' cell is `true`; a 'dead' cell is `false`\nexport const populateCells = arr => arr.map(() => Math.random() > c.probability);\n\n/*** NEXT GENERATION ***/\n// Calculate x and y coordinates of cells based on index\nexport const coordinatesCalc = index => {\n  if (typeof index !== 'number') {\n    throw new Error('coordinatesCalc: Argument must be a number');\n  }\n\n  const x = index % c.gridWidth;\n  const y = Math.floor(index / c.gridWidth);\n  return [x, y];\n};\n\n// Count how many of a given cell's neighbors are alive\nconst neighborsAlive = (idx, arr) => {\n  // isAlive returns a Boolean\n  const isAlive = (x, y, array = arr) => {\n    // Default values for neighbors' x and y coordinates\n    let xC = x,\n      yC = y;\n\n    // Make grid toroidal (fix nonexistent cell coordinates)\n    // Horizontal wrapping\n    if (x === -1) {\n      xC = c.gridWidth - 1;\n    }\n    if (x === c.gridWidth) {\n      xC = 0;\n    }\n\n    // Vertical wrapping\n    if (y === -1) {\n      yC = c.gridHeight - 1;\n    }\n    if (y === c.gridHeight) {\n      yC = 0;\n    }\n\n    // Avoid a loop by inferring index\n    const index = xC + yC * c.gridWidth;\n    return arr[index]; // Boolean\n  };\n\n  // Convert the cells index to x/y coordinate value\n  const [x, y] = coordinatesCalc(idx);\n\n  // Coordinates of adjacent cells\n  const directions = [\n    [x - 1, y - 1], // NW\n    [x, y - 1], // N\n    [x + 1, y - 1], // NE\n    [x - 1, y], // W\n    [x + 1, y], // E\n    [x - 1, y + 1], // SW\n    [x, y + 1], // S\n    [x + 1, y + 1], // SE\n  ];\n\n  // Count living, adjacent cells\n  let count = 0;\n  directions.forEach(direction => {\n    if (isAlive(...direction)) {\n      count++;\n    }\n  });\n\n  // Return the total\n  return count;\n};\n\n// Calculate whether cell will be `alive` next generation\nconst calculateNext = (idx, arr) => {\n  const alive = arr[idx];\n  const count = neighborsAlive(idx, arr);\n\n  // John Conway's Rules\n  if (alive && count < 2) {\n    return false;\n  }\n  if (alive && count > 3) {\n    return false;\n  }\n  if (alive && (count === 2 || count === 3)) {\n    return true;\n  }\n  if (!alive && count === 3) {\n    return true;\n  }\n  // Fallback\n  return alive;\n};\n\n// Advance cells in the array by one generation based on neighbors' `alive` values\nexport const nextGen = arr => arr.map((c, i) => calculateNext(i, arr));\n","import * as at from '../constants/action-types';\nimport * as u from './cellData.utils';\n\nconst cellData = (state = [], action) => {\n  switch (action.type) {\n    case at.CLEAR:\n      return u.clearCells();\n    case at.MAKE_GRID:\n      return u.populateCells(u.clearCells());\n    case at.NEXT_GEN:\n      return u.nextGen(state);\n    case at.TOGGLE:\n      const clone = [...state];\n      clone[action.index] = !state[action.index];\n      return clone;\n    default:\n      return state;\n  }\n};\n\nexport default cellData;\n","import * as at from '../constants/action-types';\n\nconst generation = (state = 0, action) => {\n  switch (action.type) {\n    case at.CLEAR:\n      return 0;\n    case at.MAKE_GRID:\n      return 0;\n    case at.NEXT_GEN:\n      return state + 1;\n    default:\n      return state;\n  }\n};\n\nexport default generation;\n","import { combineReducers } from 'redux';\n\nimport cellData from './cellData';\nimport generation from './generation';\n\nexport default combineReducers({\n  cellData,\n  generation,\n});\n","// Store\nimport { createStore } from 'redux';\nimport reducer from './reducers/index';\n\nconst store = createStore(reducer);\n\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}